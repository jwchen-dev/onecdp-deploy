apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: oneec
  labels:
    app: {{ .Chart.Name }}

spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Chart.Name }}

  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus

      labels:
        app: {{ .Chart.Name }}
        version: {{ .Values.image.version }}

    spec:
      volumes:
        - name: {{ .Chart.Name }}-configmap-volume
          configMap:
            name: {{ .Chart.Name }}-configmap

      imagePullSecrets:
        - name: harbor-registry

      #nodeSelector:
      #  K8S: node
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - k8s-node01.oneec-ga.ai
                - k8s-node02.oneec-ga.ai
                - k8s-node03.oneec-ga.ai

      containers:
        - name: {{ .Chart.Name }}
          image: "registry.oneec-dev.ai/onecdp/{{ .Chart.Name }}:{{ .Values.image.version }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /opt/service/config/application.properties
              subPath: application.properties
              readOnly: true
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /opt/service/config/masterDB.properties
              subPath: masterDB.properties
              readOnly: true
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /opt/service/config/hotrod-client.properties
              subPath: hotrod-client.properties
              readOnly: true
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /opt/service/config/solr.properties
              subPath: solr.properties
              readOnly: true
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /opt/service/spring-boot.sh
              subPath: spring-boot.sh
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /opt/service/logback-spring.xml
              subPath: logback-spring.xml
            - name: {{ .Chart.Name }}-configmap-volume
              mountPath: /opt/service/config/app.properties
              subPath: app.properties
              readOnly: true

          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cdp-db-secret
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cdp-db-secret
                  key: password
            - name: CACHE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cache-secret
                  key: username
            - name: CACHE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cache-secret
                  key: password

          resources:
            requests:
              cpu: 100m
              memory: 500Mi
            limits:
              cpu: 2000m
              memory: 15000Mi

          ports:
            - name: http
              containerPort: 8080

          livenessProbe:
            initialDelaySeconds: 40
            periodSeconds: 30
            timeoutSeconds: 3
            httpGet:
              path: /health
              port: 8080

          lifecycle:
            preStop:
              exec:
                command: ["curl", "-XPOST", "http://localhost:8080/shutdown"]