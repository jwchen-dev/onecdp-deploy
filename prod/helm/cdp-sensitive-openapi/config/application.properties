logging.level.root=INFO
logging.level.com.systex=INFO
#logging.exception-conversion-word=%wEx{full, io.undertow, org.apache.catalina, org.springframework.aop, org.springframework.security, org.springframework.transaction, org.springframework.web, org.springframework.boot.actuate, org.jboss.threads.EnhancedQueueExecutor}

server.port=8080

# Health Info
#info.app.name=Sensitive OpenApi
#info.app.description=Provide Data Operator Web API

#management.endpoint.shutdown.enabled=true
#management.security.enabled=false

#management.endpoints.web.base-path=/
#management.endpoints.web.path-mapping.health=health

#management.health.probes.enabled=true
#management.endpoint.health.group.liveness.include=livenessState,btSQL,solr
#management.endpoint.health.group.readiness.include=readinessState,btSQL,solr,infinispan

#management.metrics.enable.logback=false

#management.endpoints.web.exposure.include=health,info,metrics,shutdown,prometheus
#management.endpoints.web.exposure.exclude=

#management.endpoints.jmx.exposure.include=*
#management.endpoints.jmx.exposure.exclude=

# Exclude Autoconfigure
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

# HTTP encoding (HttpEncodingProperties)
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.session.store-type=none


## springboot
#logging.level.org.springframework.boot.autoconfigure=DEBUG
logging.level.org.springframework.jdbc=INFO
spring.main.lazy-initialization=true

## undertow
## 因 server.undertow.accesslog.enabled 一啟用，就會輸出到檔案，所以客製了一個　access log receiver，為避免混淆，所以 property name 分開
xserver.undertow.accesslog.enabled=true
server.undertow.accesslog.pattern=%t %a "%r" %s (%D ms)
server.undertow.options.server.record-request-start-time=true
server.undertow.accesslog.console.enabled=true


## JDBC
spring.datasource.url=jdbc:postgresql://dbpgsql.oneec-ga.ai/onecdp
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.initialization-mode=always
spring.jmx.enabled=false


## Solr
cdp.solr.urls=http://cdp-solr-api.oneec-ga.ai:8080/solr


## readiness + liveness
management.health.probes.enabled=true
management.endpoint.health.group.readiness.include=readinessState
management.endpoint.health.group.liveness.include=livenessState
management.endpoint.shutdown.enabled=true

management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=health


## springdoc
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/oapi/v1/swagger
springdoc.swagger-ui.path=/oapi/v1/swagger-ui.html
springdoc.swagger-ui.defaultModelsExpandDepth=-1
springdoc.api-docs.resolve-schema-properties=true

## application
cdp.openapi.produce.endpoint=http://kafka-producer-api.oneec
cdp.openapi.internal.auth.token=5W7cTSywBGG8uYb5avKHCYkBtdBcFCCU8wGeOzsFfj4oDI8RL57iWsQfBy4PTtT9